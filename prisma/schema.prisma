// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelo de usuarios
model User {
  id         Int      @id @default(autoincrement())
  usuario    String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

// Modelo de camiones/trucks
model Truck {
  id          Int      @id @default(autoincrement())
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  // Relaciones
  repartos Reparto[]

  @@map("trucks")
}

// Modelo de clientes - usando nombres consistentes
model Client {
  id           Int      @id @default(autoincrement())
  codigo       String   @unique @map("Codigo")
  razon        String?  @map("Razon")
  nombre       String   @map("Nombre")
  direccion    String?  @map("Direccion")
  telefono1    String?  @map("Telefono1")
  ruc          String?  @map("Ruc")
  activo       Int      @default(1) @map("Activo")
  coordenada_x Float?   @map("Coordenada_x")
  coordenada_y Float?   @map("Coordenada_y")
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  // Relaciones
  clientesporReparto ClienteporReparto[]

  @@map("clients")
}

// Modelo de días de entrega
model DiaEntrega {
  id          Int      @id @default(autoincrement())
  descripcion String   @unique
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  // Relaciones
  repartos Reparto[]

  @@map("diasEntrega")
}

// Modelo de repartos
model Reparto {
  id             Int      @id @default(autoincrement())
  diasEntrega_id Int
  camion_id      Int
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Relaciones
  diaEntrega         DiaEntrega          @relation(fields: [diasEntrega_id], references: [id], onDelete: Cascade)
  camion             Truck               @relation(fields: [camion_id], references: [id], onDelete: Cascade)
  clientesporReparto ClienteporReparto[]

  @@map("repartos")
}

// Modelo de asignación clientes por reparto
model ClienteporReparto {
  id         Int      @id @default(autoincrement())
  reparto_id Int
  cliente_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // Relaciones
  reparto Reparto @relation(fields: [reparto_id], references: [id], onDelete: Cascade)
  cliente Client  @relation(fields: [cliente_id], references: [id], onDelete: Cascade)

  // Índice único para evitar duplicados
  @@unique([reparto_id, cliente_id])
  @@map("ClientesporReparto")
}
